+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ Linux: ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

The installation as a shell application on Linux is very easy. On Ubuntu you can either install a prebuilt binary:

sudo add-apt-repository ppa:roelofberg/limereg
sudo apt-get update
sudo apt-get install limereg

Or you compile the application yourself (recommended to utilize full compiler optimization for your particular CPU)
To do so, on Ubuntu open a shell console window and enter the following commands (the Git branch 'master' might
be unstable, better use the latest versionbranch):

Cd into the folder this install.txt file is located (I assume you fetched it by a call to 
git clone https://github.com/RoelofBerg/liblimereg). 

Then compile and install liblimereg (or install it from a package like ppa:roelofberg/liblimereg as shown above).

sudo apt-get update -qq
sudo apt-get install build-essentials doxygen
git clone https://github.com/RoelofBerg/liblimereg
cd liblimereg
make
sudo make install
sudo make install-dev
make test-dev
cd ..

Once you have liblimereg installed, install the prerequisites and build the application:

sudo apt-get install libcv-dev libhighgui-dev libopencv-dev libboost-all-dev help2man
make
sudo make install

Now you can start limereg by just entering 'limereg' on the shell console window. For usage information enter:

limereg --help
or
man limereg

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ Verification: +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

You may want to test the build by executing StartExampleRegistration.sh. The output should be something like:

limereg version 1.?.?
Parameters: tfile="testimg\T_4096.bmp" rfile="testimg\R_4096.bmp" outfile="" maxiter=150[iter.] levels=0[levels, 0=autom
.] maxrot=10[deg.] maxtrans=10[percent] stopsens=0.7 nlm=disabled cdn=10 nogui=disabled
Multilevel autodetection suggests 7 levels.
Register image of size 4096 x 4096 using 7 levels.
Performing local registration (DSPCount= 0.000000 ).
Switched to finer level after  4.000000 iterations.
Switched to finer level after  1.000000 iterations.
Switched to finer level after  1.000000 iterations.
Switched to finer level after  2.000000 iterations.
Switched to finer level after  4.000000 iterations.
Switched to finer level after  1.000000 iterations.
Switched to finer level after  1.000000 iterations.

Total duration: 233.519ms (842.405ms cpu)
Iterations = 14, SSD = 1.4824, w = [5.04891 deg, 6.0895, 126.901]
